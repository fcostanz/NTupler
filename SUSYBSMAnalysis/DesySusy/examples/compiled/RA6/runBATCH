#!/bin/bash

##
##  usage:
##	./runBATCH setName sampleSpecificationsFile
##    setName: arbitrary string, which describes the output of this job.
##    sampleSpecificationsFile: text file with location on nTuples etc.: MC.txt, DATA.txt
##
##  example:
##	./runBATCH RA6selectionMETge150 MC.txt
##

setName=$1
#target=/afs/naf.desy.de/user/s/schettle/scratch/AnalysisTrees/whole2011_RA6
target=/scratch/hh/current/cms/user/schettle/AnalysisTrees/first2012_RA6
scriptLoc=/afs/naf.desy.de/user/s/schettle/macro/CMSSW_5_2_5/src/DesySusyExamples/compiled/batch
codeLoc=/afs/naf.desy.de/user/s/schettle/macro/CMSSW_5_2_5/src/DesySusyExamples/compiled/RA6

if [ -f $2 ]; then
    source $2
else
    echo second argument is expected to be a file with sample specifications, which is not the case for $2
    exit
fi

#get PU info from RA4b
PUfile=/afs/naf.desy.de/user/s/schettle/macro/CMSSW_5_2_5/src/DesySusyExamples/ra4b_2012/pu_config.txt

if [ "$setName" = "" ]; then
	echo "please define setName or cancel [Ctrl c]."
	read setName
fi

goFor="n"

for (( i=1; i<=$sampleCounter; ++i )); do

    if [ ! -n "${sampleName[$i]}" -o ! -n "${sampleSource[$i]}" -o ! -n "${sampleConfig[$i]}" -o ! -n "${sampleNfiles[$i]}" ]
    then
	echo CHECK YOUR SAMPLE SPECIFICATIONS! SOMTHING MISSING IN SAMPLE $i
	exit
    fi

    if [ "$goFor" != "all" ]; then
	goFor="n"
    fi

    if [ -d "${target}/${setName}_${sampleName[$i]}" ]; then
	echo dir ${target}/${setName}_${sampleName[$i]} already exists. Remove dir or choose another set name.
	goFor="exists"
	echo "run anyhow? (resub)"
	read -t2 -n1 goFor
    fi

    if [ "$goFor" != "all" -a "$goFor" != "exists" -a "$goFor" != "y" ]; then
	echo "run ${setName}_${sampleName[$i]}? [y/n/all]"
	read goFor
    fi  

    if [ "$goFor" = "y" -o "$goFor" = "all" ]; then
	if [ ! -d "${target}/${setName}_${sampleName[$i]}" ]; then
	    mkdir ${target}/${setName}_${sampleName[$i]}
	fi
	cd ${target}/${setName}_${sampleName[$i]}
	if [ ! -d "${codeLoc}/ConfigTMP" ]; then
	    mkdir -p ${codeLoc}/ConfigTMP
	fi
	cp ${codeLoc}/${sampleConfig[$i]} ${codeLoc}/ConfigTMP

	while read line
	  do
	  if [[ ! ${dataPU} == "" ]]; then
	      if [[ $line == ${dataPU}* ]]; then
		  echo $line >> ${codeLoc}/ConfigTMP/config.txt
	      fi
	  fi
	  echo >> ${codeLoc}/ConfigTMP/config.txt
	  if [[ ! ${samplePU[$i]} == "" ]]; then
	      if [[ $line == ${samplePU[$i]}* ]]; then
		  echo ..${samplePU[$i]}.." line: " $line
		  echo ${line/${samplePU[$i]}/PU_MC} >> ${codeLoc}/ConfigTMP/config.txt
	      fi
	  fi
	done < $PUfile
	${scriptLoc}/./runOnAll2 ${sampleSource[$i]} \
	    ${codeLoc}/myAnalysis ${codeLoc}/ConfigTMP/config.txt \
	    cleanUp nFiles=${sampleNfiles[$i]}
	echo
    fi
done




